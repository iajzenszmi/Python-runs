A python version of xbrent. based on page 252- 253 Numerical recipes fortran version William H Press et al Chapter 9 Root Finding 
and Non-Lineaer sets of equations  : Van Wijngaarden -Dekker-Brent Method and generated  chat.openai.com GPT-4.0 
--------------------------------------------------------------------------------------------------------------------------------
@ian-Latitude-3190-2-in-1:~$ ipython3 xbrent.py
Root of the function:  1.999999899859306
ian@ian-Latitude-3190-2-in-1:~$ cat xbrent.py
import numpy as np
from scipy.optimize import brentq
def zbrent(func, x1, x2, TOL=1e-5):
    """Finds the root of a function known to lie between x1 and x2 using Brent's method.
    Args:
    func (function): The function for which the root is to be calculated.
    x1 (float): The lower limit of the bracket.
    x2 (float): The upper limit of the bracket.
    TOL (float, optional): The desired accuracy. Defaults to 1e-5.
    Returns:
    float: The root of the function.
    """
    root, results = brentq(func, x1, x2, full_output=True, xtol=TOL)
    if results.converged:
        return root
    else:
        raise ValueError(f"The root finding process did not converge after {results.iterations} iterations.")
# Test with a function
def test_func(x):
    return x**2 - 4
root = zbrent(test_func, 0, 3)
print("Root of the function: ", root)
ian@ian-Latitude-3190-2-in-1:~$ sloccount xbrent.py
Have a non-directory at the top, so creating directory top_dir
Adding /home/ian/xbrent.py to top_dir
Categorizing files.
Finding a working MD5 command....
Found a working MD5 command.
Computing results.
SLOC Directory SLOC-by-Language (Sorted)
12      top_dir         python=12
Totals grouped by language (dominant language first):
python:          12 (100.00%)
Total Physical Source Lines of Code (SLOC)                = 12
Development Effort Estimate, Person-Years (Person-Months) = 0.00 (0.02)
 (Basic COCOMO model, Person-Months = 2.4 * (KSLOC**1.05))
Schedule Estimate, Years (Months)                         = 0.05 (0.60)
 (Basic COCOMO model, Months = 2.5 * (person-months**0.38))
Estimated Average Number of Developers (Effort/Schedule)  = 0.04
Total Estimated Cost to Develop                           = $ 260
 (average salary = $56,286/year, overhead = 2.40).
SLOCCount, Copyright (C) 2001-2004 David A. Wheeler
SLOCCount is Open Source Software/Free Software, licensed under the GNU GPL.
SLOCCount comes with ABSOLUTELY NO WARRANTY, and you are welcome to
redistribute it under certain conditions as specified by the GNU GPL license;
see the documentation for details.
Please credit this data as "generated using David A. Wheeler's 'SLOCCount'."
